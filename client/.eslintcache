[{"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/index.js":"1","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/App.js":"2","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Home.js":"3","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/hooks/auth.js":"4","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Signup.js":"5","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Notes.js":"6","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Login.js":"7","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/components/NoteForm.js":"8","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/components/Menu.js":"9"},{"size":380,"mtime":1610682091513,"results":"10","hashOfConfig":"11"},{"size":2540,"mtime":1610822468228,"results":"12","hashOfConfig":"11"},{"size":1954,"mtime":1610828929264,"results":"13","hashOfConfig":"11"},{"size":2425,"mtime":1610678157627,"results":"14","hashOfConfig":"11"},{"size":3454,"mtime":1611281884771,"results":"15","hashOfConfig":"11"},{"size":1249,"mtime":1610678157631,"results":"16","hashOfConfig":"11"},{"size":2987,"mtime":1611281975139,"results":"17","hashOfConfig":"11"},{"size":1335,"mtime":1610678157626,"results":"18","hashOfConfig":"11"},{"size":2363,"mtime":1611280624913,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o9fbki",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/index.js",[],["44","45"],"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/App.js",[],"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Home.js",["46"],"// import Navbar from 'react-bootstrap/Navbar';\nimport Menu from '../components/Menu'\nimport Carousel from 'react-bootstrap/Carousel'\n\nfunction Home() {\n\n    return (\n\n        <div>\n\n            {/* <h2>\n                Weffle\n            </h2> */}\n            <p>\n                <Carousel>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"tickets.jpg\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Welcome to weffle</h3>\n                            <p>NLogin or Sign up, to host raffles or participate in live raffles.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"about2.jpg\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h3>About Information</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h3>Winners</h3>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </p>\n\n        </div>\n    );\n}\n\nexport default Home;\n\n","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/hooks/auth.js",[],"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Signup.js",["47","48","49","50"],"import { useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport useAuth from '../hooks/auth';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst Signup = () => {\n    const { signup, isLoggedIn } = useAuth();\n    // History and location are hooks we can use to manipulate our page's history!\n    const history = useHistory();\n    const location = useLocation();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // For our redirector\n    const [redirectToLogin, toggleRedirect] = useState(false);\n    // This is the key part to our redirector. We can pull the prior location out here, if it exists\n    const { from } = location.state || { from: { pathname: '/' } };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        signup(email, password).then(res => {\n            // Go back to whence you came!\n            history.replace(from);\n        });\n    };\n\n    if (isLoggedIn()) {\n        return <Redirect to={location.state || '/'} />;\n    }\n\n    if (redirectToLogin) {\n        // If someone goes to login, this transfers the redirect\n        return <Redirect to={{\n            pathname: '/login',\n            state: { from: from }\n        }}\n        />;\n    }\n\n    return (\n        <div>\n            <h2>\n                Signup Page\n            </h2>\n            {/* <form onSubmit={handleSubmit}>\n                <label htmlFor='email'>Email:</label>\n                <input\n                    name='email'\n                    placeholder='Email'\n                    type='email'\n                    autoComplete='username'\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                />\n                <br />\n                <label htmlFor='password'>Password:</label>\n                <input\n                    name='password'\n                    placeholder='Password'\n                    type='password'\n                    autoComplete='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                />\n                <br />\n                <button type='submit'>Signup</button>\n            </form>\n            <p>\n                Already have an account? <button onClick={() => toggleRedirect(true)}>Login Here</button>\n            </p> */}\n\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                    <Form.Text id=\"passwordHelpBlock\" muted>\n      Must be 8-20 characters long.\n    </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Receive Updates\" />\n                </Form.Group>\n                <Button variant=\"outline-dark\">Submit</Button>\n            </Form>\n\n        </div>\n    );\n};\n\nexport default Signup;","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Notes.js",[],"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/pages/Login.js",["51","52","53","54"],"import { useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport useAuth from '../hooks/auth';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst Login = () => {\n    const { login, isLoggedIn } = useAuth();\n    // History and location are hooks we can use to manipulate our page's history!\n    const history = useHistory();\n    const location = useLocation();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // For our redirector\n    const [redirectToSignup, toggleRedirect] = useState(false);\n    // This is the key part to our redirector. We can pull the prior location out here, if it exists\n    const { from } = location.state || { from: { pathname: '/' } };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        login(email, password).then(res => {\n            history.replace(from);\n        });\n    };\n\n    if (isLoggedIn()) {\n        return <Redirect to={location.state || '/'} />;\n    }\n\n    if (redirectToSignup) {\n        return <Redirect to={{\n            // If someone goes to signup, this transfers the redirect\n            pathname: '/signup',\n            state: { from: from }\n        }}\n        />;\n    }\n\n    return (\n        <div>\n            <h2>\n                Login Page\n            </h2>\n            {/* <form onSubmit={handleSubmit}>\n                <label htmlFor='email'>Email:</label>\n                <input\n                    name='email'\n                    placeholder='Email'\n                    type='email'\n                    autoComplete='username'\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                />\n                <br />\n                <label htmlFor='password'>Password:</label>\n                <input\n                    name='password'\n                    placeholder='Password'\n                    type='password'\n                    autoComplete='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                />\n                <br />\n                <button type='submit'>Login</button>\n            </form>\n            <p>\n                Need an account? <button onClick={() => toggleRedirect(true)}>Signup Here</button>\n            </p> */}\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n\n                </Form.Group>\n\n                <Button variant=\"outline-dark\">Submit</Button>\n            </Form>\n\n        </div >\n    );\n};\n\nexport default Login;","/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/components/NoteForm.js",[],["55","56"],"/Users/lillianparis/Documents/Bootcamp/final-project-three/client/src/components/Menu.js",["57","58","59"],"import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/Navdropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport useAuth from '../hooks/auth';\n\n\nconst Menu = () => {\n    const { isLoggedIn, logout, getProfile } = useAuth();\n    return (\n        <div>\n            {/* <h3>Navbar</h3> */}\n            {/* <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to='/notes'>Notes</Link></li>\n                {isLoggedIn() ?\n                    <>\n                        <li>Hello, {getProfile().email}</li>\n                        <li><Link onClick={() => logout()} to='/'>Logout</Link></li>\n                    </>\n                    :\n                    <>\n                        <li><Link to=\"/signup\">Signup</Link></li>\n                        <li><Link to=\"/login\">Login</Link></li>\n                    </>\n                }\n\n            </ul> */}\n\n        <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Weffle</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n                        <Nav.Link href=\"#link\">About</Nav.Link>\n                        <Nav.Link href=\"#link\">Host</Nav.Link>\n                        <Nav.Link href=\"#link\">Winners</Nav.Link>\n                        <NavDropdown title=\"Options\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item ><Link to=\"/login\">Login</Link></NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item><Link to=\"/signup\">Sign Up</Link></NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search Raffles\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-light\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Menu;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":12,"column":19,"nodeType":"66","messageId":"67","endLine":12,"endColumn":27},{"ruleId":"64","severity":1,"message":"69","line":13,"column":22,"nodeType":"66","messageId":"67","endLine":13,"endColumn":33},{"ruleId":"64","severity":1,"message":"70","line":15,"column":29,"nodeType":"66","messageId":"67","endLine":15,"endColumn":43},{"ruleId":"64","severity":1,"message":"71","line":19,"column":11,"nodeType":"66","messageId":"67","endLine":19,"endColumn":23},{"ruleId":"64","severity":1,"message":"68","line":12,"column":19,"nodeType":"66","messageId":"67","endLine":12,"endColumn":27},{"ruleId":"64","severity":1,"message":"69","line":13,"column":22,"nodeType":"66","messageId":"67","endLine":13,"endColumn":33},{"ruleId":"64","severity":1,"message":"70","line":15,"column":30,"nodeType":"66","messageId":"67","endLine":15,"endColumn":44},{"ruleId":"64","severity":1,"message":"71","line":19,"column":11,"nodeType":"66","messageId":"67","endLine":19,"endColumn":23},{"ruleId":"60","replacedBy":"72"},{"ruleId":"62","replacedBy":"73"},{"ruleId":"64","severity":1,"message":"74","line":12,"column":13,"nodeType":"66","messageId":"67","endLine":12,"endColumn":23},{"ruleId":"64","severity":1,"message":"75","line":12,"column":25,"nodeType":"66","messageId":"67","endLine":12,"endColumn":31},{"ruleId":"64","severity":1,"message":"76","line":12,"column":33,"nodeType":"66","messageId":"67","endLine":12,"endColumn":43},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'toggleRedirect' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["77"],["78"],"'isLoggedIn' is assigned a value but never used.","'logout' is assigned a value but never used.","'getProfile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]